/* MiTAC Int'l Corp. 2001~2005

=========================================================================
Description:
    This file include the defination of the IOCTL code 
    & event naming to system driver.
=========================================================================
Release notes

Modifier	        sign	        date		    Description
-------------------------------------------------------------------------
Span Liu			span0823        08/23/2005		add Iboot IOCTL reset device
Span Liu			span0728        07/28/2005		add Event name for earphone
Span Liu			span0716        07/16/2005		add MPM IOCTL switch of MUT usb driver to ActiveSync usb driver
Span Liu			span0621        06/21/2005		add Themal Event name
Span Liu			span0608        06/08/2005		add Themal IOCTL
Span Liu			span0607        06/07/2005		add Iboot IOCTL
Span Liu			span0526        05/26/2005		add MPM IOCTL device state for query
Span Liu			span0502        05/02/2005		add MPM IOCTL & event name 
Span Liu			span0429        04/29/2005		add MUT event name 
Jawa Chen           jawa01          04/28/2005      Add Flash IOCTL
Span Liu			span0120        01/20/2005		add HDD IOCTL 
Span Liu			span0111        01/11/2005		add backlight IOCTL 
Pat Kuo                                             initial release
*/


#ifndef __THALES_DEFINES_H__
#define __THALES_DEFINES_H__

/// we should use this file for OEM ... Ruby.h


//jawa01 start
#define IOCTL_HAL_WriteReserve        			CTL_CODE(FILE_DEVICE_HAL,2053, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_HAL_ReadReserve         			CTL_CODE(FILE_DEVICE_HAL,2054, METHOD_BUFFERED, FILE_ANY_ACCESS)
///span0601, change for use different IO code #define IOCTL_HAL_WRITE_SERIAL_NO        		CTL_CODE(FILE_DEVICE_HAL,2053, METHOD_BUFFERED, FILE_ANY_ACCESS)
///span0601, change for use different IO code #define IOCTL_HAL_READ_SERIAL_NO         		CTL_CODE(FILE_DEVICE_HAL,2054, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_HAL_WRITE_SERIAL_NO        		CTL_CODE(FILE_DEVICE_HAL,2055, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_HAL_READ_SERIAL_NO         		CTL_CODE(FILE_DEVICE_HAL,2056, METHOD_BUFFERED, FILE_ANY_ACCESS)
//jawa01 end 

#define IOCTL_HAL_WRITE_HW_VERSION        		CTL_CODE(FILE_DEVICE_HAL,2057, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_HAL_READ_HW_VERSION  	      		CTL_CODE(FILE_DEVICE_HAL,2058, METHOD_BUFFERED, FILE_ANY_ACCESS)

///span0924 start
#define IOCTL_HAL_RESERVED_FLASH_CONTAIN		CTL_CODE(FILE_DEVICE_HAL,2059, METHOD_BUFFERED, FILE_ANY_ACCESS)
///span0924 end

//min1208
#define IOCTL_HAL_STORE_SPLASHSCREEN                    CTL_CODE(FILE_DEVICE_HAL,2060, METHOD_BUFFERED, FILE_ANY_ACCESS)
//min1208 end
////min1214 

#define IOCTL_HAL_GET_FLASH_SETTING                     CTL_CODE(FILE_DEVICE_HAL,2061, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_HAL_SET_BT_UUID                     CTL_CODE(FILE_DEVICE_HAL,2062, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_HAL_WRITE_FLASH_SETTING                     CTL_CODE(FILE_DEVICE_HAL,2063, METHOD_BUFFERED, FILE_ANY_ACCESS)  //min1221
////min1214
//Kathy01_00 start
#define IOCTL_GPIO_CPLD_TDI_SET_ON 	CTL_CODE(FILE_DEVICE_HAL,2064,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_GPIO_CPLD_TDI_SET_OFF CTL_CODE(FILE_DEVICE_HAL,2065,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_GPIO_CPLD_TCK_SET_ON 	CTL_CODE(FILE_DEVICE_HAL,2066,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_GPIO_CPLD_TCK_SET_OFF CTL_CODE(FILE_DEVICE_HAL,2067,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_GPIO_CPLD_TMS_SET_ON 	CTL_CODE(FILE_DEVICE_HAL,2068,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_GPIO_CPLD_TMS_SET_OFF CTL_CODE(FILE_DEVICE_HAL,2069,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_GPIO_CPLD_TDO_GET 	CTL_CODE(FILE_DEVICE_HAL,2070,METHOD_BUFFERED,FILE_ANY_ACCESS)
//Kathy01_00 end

//Kathy01_01 start
#define IOCTL_GPIO_CPLD_ENABLE      CTL_CODE(FILE_DEVICE_HAL,2071,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_GPIO_CPLD_DISABLE    	CTL_CODE(FILE_DEVICE_HAL,2072,METHOD_BUFFERED,FILE_ANY_ACCESS)
//Kathy01_01 end
#define IOCTL_CEDM_FLASH_CHECKSUM				CTL_CODE(FILE_DEVICE_HAL,4006,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_MITAC_HAL_REBOOT					CTL_CODE(FILE_DEVICE_HAL,4012,METHOD_BUFFERED,FILE_ANY_ACCESS)
///span0607
#define IOCTL_OEM_HAL_IBOOT						CTL_CODE(FILE_DEVICE_HAL,4013,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_OEM_HAL_CEJUMP_BOOT				CTL_CODE(FILE_DEVICE_HAL,4014,METHOD_BUFFERED,FILE_ANY_ACCESS)
///span0607
// Ryn0310 Start
#define IOCTL_PSM_FLASH_CMD						CTL_CODE(FILE_DEVICE_HAL,4066,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_HAL_UPGRADE_UBOOT					CTL_CODE(FILE_DEVICE_HAL,4067,METHOD_BUFFERED,FILE_ANY_ACCESS)
// Ryn0310 End


///span0608, copy to ioctl.h
#define IOCTL_OEM_THM_BASE                     	3500                    
#define IOCTL_OEM_THM_TEST_START               	CTL_CODE(FILE_DEVICE_HAL,IOCTL_OEM_THM_BASE,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_OEM_THM_TEST_END                 	CTL_CODE(FILE_DEVICE_HAL,IOCTL_OEM_THM_BASE+1,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_OEM_THM_TEST_RUN                 	CTL_CODE(FILE_DEVICE_HAL,IOCTL_OEM_THM_BASE+2,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_OEM_THM_TEST_WRITE               	CTL_CODE(FILE_DEVICE_HAL,IOCTL_OEM_THM_BASE+3,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_OEM_THM_TEST_READ                	CTL_CODE(FILE_DEVICE_HAL,IOCTL_OEM_THM_BASE+4,METHOD_BUFFERED,FILE_ANY_ACCESS)

#define IOCTL_OEM_THM_CHECK	                	CTL_CODE(FILE_DEVICE_HAL,IOCTL_OEM_THM_BASE+5,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_OEM_GET_TEMPERATURE              	CTL_CODE(FILE_DEVICE_HAL,IOCTL_OEM_THM_BASE+6,METHOD_BUFFERED,FILE_ANY_ACCESS)
//1214 mindy
#define IOCTL_OEM_SET_LOW_TEMPERATURE              	CTL_CODE(FILE_DEVICE_HAL,IOCTL_OEM_THM_BASE+7,METHOD_BUFFERED,FILE_ANY_ACCESS)
///span0608, copy to ioctl.h
///span0621, add named event 
#define EVENT_OEM_THERMAL_TOO_LOW				TEXT("named oem theraml over low")
#define EVENT_OEM_THERMAL_ABOVE_TOO_LOW			TEXT("named oem thermal back form over low")
#define EVENT_OEM_THERMAL_TOO_HIGH				TEXT("named oem theraml over high")
#define EVENT_OEM_THERMAL_ABOVE_TOO_HIGH		TEXT("named oem thermal back form over high")
///span0621, add named event 

///span0111 start
#define IOCTL_OEM_BACKLIGHT_BRIGHTNESS_UP		CTL_CODE(FILE_DEVICE_HAL,4200,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_OEM_BACKLIGHT_BRIGHTNESS_DOWN		CTL_CODE(FILE_DEVICE_HAL,4201,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_OEM_BACKLIGHT_BRIGHTNESS_SET		CTL_CODE(FILE_DEVICE_HAL,4202,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_OEM_BACKLIGHT_BRIGHTNESS_GET		CTL_CODE(FILE_DEVICE_HAL,4203,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_OEM_BACKLIGHT_ON					CTL_CODE(FILE_DEVICE_HAL,4204,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_OEM_BACKLIGHT_OFF					CTL_CODE(FILE_DEVICE_HAL,4205,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_OEM_LCD_BACKLIGHT_ON				CTL_CODE(FILE_DEVICE_HAL,4206,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_OEM_LCD_BACKLIGHT_OFF				CTL_CODE(FILE_DEVICE_HAL,4207,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_OEM_KEYPAD_BACKLIGHT_ON			CTL_CODE(FILE_DEVICE_HAL,4208,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_OEM_KEYPAD_BACKLIGHT_OFF			CTL_CODE(FILE_DEVICE_HAL,4209,METHOD_BUFFERED,FILE_ANY_ACCESS)
///span0111 end

///span0120 start
#define MIO_IOCTL_DISK_POWER_DOWN				CTL_CODE(FILE_DEVICE_HAL,4055,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define MIO_IOCTL_DISK_POWER_UP					CTL_CODE(FILE_DEVICE_HAL,4056,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_OEM_DISK_POWER_DOWN				CTL_CODE(FILE_DEVICE_HAL,4057,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_OEM_DISK_POWER_UP					CTL_CODE(FILE_DEVICE_HAL,4058,METHOD_BUFFERED,FILE_ANY_ACCESS)
///span0120 end
#define ESC_OEM_LCD_ON							CTL_CODE(FILE_DEVICE_HAL,4060,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define ESC_OEM_LCD_OFF							CTL_CODE(FILE_DEVICE_HAL,4061,METHOD_BUFFERED,FILE_ANY_ACCESS)

#define IOCTL_OEM_GET_POWER_STATUS				CTL_CODE(FILE_DEVICE_HAL,4071,METHOD_BUFFERED,FILE_ANY_ACCESS)
///span0526, add device state for query
#define IOCTL_OEM_GET_DEVICE_STATUS				CTL_CODE(FILE_DEVICE_HAL,4072,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_OEM_SET_DEVICE_STATUS				CTL_CODE(FILE_DEVICE_HAL,4073,METHOD_BUFFERED,FILE_ANY_ACCESS)
///span0526, add device state for query
///span0716, add switch of MUT usb driver to ActiveSync usb driver
#define IOCTL_OEM_SET_MUT_TO_AS					CTL_CODE(FILE_DEVICE_HAL,4074,METHOD_BUFFERED,FILE_ANY_ACCESS)
///span0716, add switch of MUT usb driver to ActiveSync usb driver
///span0823
#define IOCTL_OEM_IBOOT_RESET_DEVICE			CTL_CODE(FILE_DEVICE_HAL,4075,METHOD_BUFFERED,FILE_ANY_ACCESS)
///span0823
///span0327 start, add for ECHO setting
#define IOCTL_OEM_PRESET_ECHO_1					CTL_CODE(FILE_DEVICE_HAL,4081,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_OEM_PRESET_ECHO_2					CTL_CODE(FILE_DEVICE_HAL,4082,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_OEM_SET_ECHO_BYPASS				CTL_CODE(FILE_DEVICE_HAL,4083,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_OEM_SET_ECHO_POWERDOWN			CTL_CODE(FILE_DEVICE_HAL,4084,METHOD_BUFFERED,FILE_ANY_ACCESS)///span0509
#define EVENT_OEM_PRESET_ECHO_1					TEXT("named oem echo setting file1")
#define EVENT_OEM_PRESET_ECHO_2					TEXT("named oem echo setting file2")
#define EVENT_OEM_SET_ECHO_BYPASS				TEXT("named oem echo bypass")
#define EVENT_OEM_SET_ECHO_POWERDOWN			TEXT("named oem echo powerdown")///span0509
///span0327 end,


#define WM_MITAC_OFFSET							2000
#define WM_OEM_OFFSET							200
#define WM_OEM_RUBY_OFFSET						(WM_MITAC_OFFSET + WM_OEM_OFFSET)

///span0429 start, add for MUT
#define WM_BREAKSYNC							(WM_USER + WM_MITAC_OFFSET + 2)
#define WM_STARTSYNC							(WM_USER + WM_MITAC_OFFSET + 3)

#define WM_OEM_BREAKSYNC						(WM_USER + WM_MITAC_OFFSET + 2)
#define WM_OEM_STARTSYNC						(WM_USER + WM_MITAC_OFFSET + 3)
///span0429 end, add for MUT

#define WM_OEM_POWER_STATUS_CHANGE				(WM_USER + WM_OEM_RUBY_OFFSET + 1)

#define WM_OEM_SD_REMOVED						(WM_USER + WM_OEM_RUBY_OFFSET + 11)
#define WM_OEM_SD_INSERT						(WM_USER + WM_OEM_RUBY_OFFSET + 12)

///span0728,add for earphone status
#define WM_OEM_EARPHONE_REMOVED					(WM_USER + WM_OEM_RUBY_OFFSET + 13)
#define WM_OEM_EARPHONE_INSERT					(WM_USER + WM_OEM_RUBY_OFFSET + 14)
///span0728,add for earphone status

#define WM_OEM_USB_CONNECT						(WM_USER + WM_OEM_RUBY_OFFSET + 21)
#define WM_OEM_USB_DISCONNECT					(WM_USER + WM_OEM_RUBY_OFFSET + 22)

#define WM_OEM_MP3_START						(WM_USER + WM_OEM_RUBY_OFFSET + 23)
#define WM_OEM_MP3_EXIT							(WM_USER + WM_OEM_RUBY_OFFSET + 24)

#define WM_OEM_PICTUREVIWER_START				(WM_USER + WM_OEM_RUBY_OFFSET + 25)
#define WM_OEM_PICTUREVIWER_EXIT				(WM_USER + WM_OEM_RUBY_OFFSET + 26)

///oem Demo timer time-out
#define WM_OEM_DEMO_TIMER_TIMEOUT				(WM_USER + WM_OEM_RUBY_OFFSET + 27)

#define WM_OEM_SYS_POWER_STATE_CHANGED			(WM_USER + WM_OEM_RUBY_OFFSET + 28)

///span0502 start, add for MPM
/* MPM - Mitac Power Manager */
#define OEM_POWER_STATE_MASK		0x000007FF
#define OEM_PS_S1					0x00000001
#define OEM_PS_S2					0x00000002
#define OEM_PS_S3					0x00000004
#define OEM_PS_S4					0x00000008
#define OEM_PS_S5					0x00000010
#define OEM_PS_S6					0x00000020
#define OEM_PS_S7					0x00000040

#define OEM_POWER_SOURCE_MASK		0x00000800
#define OEM_PS_AC					0x00000800
#define OEM_PS_BATT					0x00000000

#define OEM_SCR_FORBIDDEN_MASK		0xFF000000
#define OEM_SCR_FORBIDDEN_USB		0x01000000
#define OEM_SCR_FORBIDDEN_NAV		0x02000000
#define OEM_SCR_FORBIDDEN_PICV		0x04000000
#define OEM_SCR_FORBIDDEN_MP3		0x08000000
#define OEM_SCR_FORBIDDEN_USER		0xF0000000

#define OEM_SYS_FORBIDDEN_MASK		0x00FF0000
#define OEM_SYS_FORBIDDEN_USB		0x00010000
#define OEM_SYS_FORBIDDEN_HDD		0x00020000
#define OEM_SYS_FORBIDDEN_SD		0x00040000
#define OEM_SYS_FORBIDDEN_WAV		0x00080000
#define OEM_SYS_FORBIDDEN_USER		0x00F00000


#define IOCTL_OEM_SCREEN_TIMER_ENABLE			CTL_CODE(FILE_DEVICE_HAL,4221,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_OEM_SCREEN_TIMER_DISABLE			CTL_CODE(FILE_DEVICE_HAL,4222,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_OEM_SCREEN_TIMER_SET				CTL_CODE(FILE_DEVICE_HAL,4223,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_OEM_SCREEN_TIMER_RESET			CTL_CODE(FILE_DEVICE_HAL,4224,METHOD_BUFFERED,FILE_ANY_ACCESS)

#define IOCTL_OEM_SUSPEND_TIMER_ENABLE			CTL_CODE(FILE_DEVICE_HAL,4230,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_OEM_SUSPEND_TIMER_DISABLE			CTL_CODE(FILE_DEVICE_HAL,4231,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_OEM_SUSPEND_TIMER_SET				CTL_CODE(FILE_DEVICE_HAL,4232,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define IOCTL_OEM_SUSPEND_TIMER_RESET			CTL_CODE(FILE_DEVICE_HAL,4233,METHOD_BUFFERED,FILE_ANY_ACCESS)

#define EVENT_OEM_SCREEN_TIMER_ENABLE			TEXT("named oem screen timer enable")
#define EVENT_OEM_SCREEN_TIMER_DISABLE			TEXT("named oem screen timer disable")
#define EVENT_OEM_SCREEN_TIMER_SET				TEXT("named oem screen timer set")
#define EVENT_OEM_SCREEN_TIMER_RESET			TEXT("named oem screen timer reset")

#define EVENT_OEM_SUSPEND_TIMER_ENABLE			TEXT("named oem suspend timer enable")
#define EVENT_OEM_SUSPEND_TIMER_DISABLE			TEXT("named oem suspend timer disable")
#define EVENT_OEM_SUSPEND_TIMER_SET				TEXT("named oem suspend timer set")
#define EVENT_OEM_SUSPEND_TIMER_RESET			TEXT("named oem suspend timer reset")

#define EVENT_OEM_DEMO_TIMER_TIMEOUT			TEXT("named oem Demo timer time-out")

#define EVENT_OEM_SYS_POWER_STATE_CHANGED		TEXT("named oem system power state changed")

#define REG_VALUE_SCREEN_OFF_TIME				TEXT("OEMScreenTimer")
#define REG_VALUE_SYSTEM_SUSPEND_TIME			TEXT("OEMSuspendTimer")
#define REG_VALUE_DEMO_TIME						TEXT("OEMDemoTimer")

///span0804, add for earphon re-volume settting
#define REG_PATH_EARPHONE_VOLUME_PERCENT		TEXT("Software\\Thales")
#define REG_VALUE_EARPHONE_VOLUME_PERCENT		TEXT("EarPhoneReVolPercent")
///span0804, add for earphon re-volume settting

///span0716, add for control CE shell jog switch enable or not
#define REG_VALUE_CE_SHELL_SWITCH				TEXT("OEMCEShellSwitch")
///span0716, add for control CE shell jog switch enable or not

///span0502 end, add for MPM

///span0526, add device state for query
#define OEM_DEV_STATE_MASK						0xFFFFFFFF
#define OEM_DEV_USB_MASK						0x00000003
#define OEM_DEV_USB_IN							0x00000001
#define OEM_DEV_USB_OUT							0x00000000
#define OEM_DEV_SD_MASK							0x0000000C
#define OEM_DEV_SD_IN							0x00000004
#define OEM_DEV_SD_OUT							0x00000000
#define OEM_DEV_SCR_MASK						0x00000030
#define OEM_DEV_SCR_ON							0x00000010
#define OEM_DEV_SCR_OFF							0x00000000
#define OEM_DEV_BKL_MASK						0x000000C0
#define OEM_DEV_BKL_ON							0x00000040
#define OEM_DEV_BKL_OFF							0x00000000
#define OEM_DEV_KBL_MASK						0x00000300
#define OEM_DEV_KBL_ON							0x00000100
#define OEM_DEV_KBL_OFF							0x00000000
///span0612, add for HDD status
#define OEM_DEV_HDD_MASK						0x00000C00
#define OEM_DEV_HDD_ON							0x00000400
#define OEM_DEV_HDD_OFF							0x00000000
#define OEM_DEV_HDD_FAIL						0x00000800
#define OEM_DEV_HDD_OK							0x00000000
///span0612
///span0613, add for HDD status
#define OEM_DEV_THM_MASK						0x00003000
#define OEM_DEV_THM_BAD							0x00001000
#define OEM_DEV_THM_GOOD						0x00000000
#define OEM_DEV_THM_LOW							0x00002000
#define OEM_DEV_THM_HIGH						0x00000000
///span0613
///span0728,add for earphone status
#define OEM_DEV_EAR_MASK						0x00030000
#define OEM_DEV_EAR_IN							0x00010000
#define OEM_DEV_EAR_OUT							0x00000000
///span0728,add for earphone status
#define OEM_DEV_ERR_MASK						0xC0000000
#define OEM_DEV_ERR_SET							0x80000000
///span0526, add device state for query

///span0621, add keycode for 8-way keycode
#define	VK_OEM_KEYCODE_BASE						0x88
#define	VK_OEM_LEFT_UP							VK_OEM_KEYCODE_BASE+0
#define	VK_OEM_RIGHT_UP							VK_OEM_KEYCODE_BASE+1
#define	VK_OEM_LEFT_DOWN						VK_OEM_KEYCODE_BASE+2
#define	VK_OEM_RIGHT_DOWN						VK_OEM_KEYCODE_BASE+3
///span0621, add keycode for 8-way keycode


#endif	///#ifndef __THALES_DEFINES_H__